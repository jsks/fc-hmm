// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// predict.cpp
list posterior_predict(const list_of<doubles_matrix<>>& beta, const list_of<doubles_matrix<>>& zeta, const doubles_matrix<>& X, const doubles& tiv, int cores);
extern "C" SEXP _fc_hmm_posterior_predict(SEXP beta, SEXP zeta, SEXP X, SEXP tiv, SEXP cores) {
  BEGIN_CPP11
    return cpp11::as_sexp(posterior_predict(cpp11::as_cpp<cpp11::decay_t<const list_of<doubles_matrix<>>&>>(beta), cpp11::as_cpp<cpp11::decay_t<const list_of<doubles_matrix<>>&>>(zeta), cpp11::as_cpp<cpp11::decay_t<const doubles_matrix<>&>>(X), cpp11::as_cpp<cpp11::decay_t<const doubles&>>(tiv), cpp11::as_cpp<cpp11::decay_t<int>>(cores)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_fc_hmm_posterior_predict", (DL_FUNC) &_fc_hmm_posterior_predict, 5},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_fc_hmm(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
